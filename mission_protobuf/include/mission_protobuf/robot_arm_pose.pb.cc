// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_arm_pose.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "robot_arm_pose.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mission_protobuf {

namespace {

const ::google::protobuf::Descriptor* RobotArm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RobotArm_reflection_ = NULL;
const ::google::protobuf::Descriptor* RobotArm_Pose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RobotArm_Pose_reflection_ = NULL;
const ::google::protobuf::Descriptor* RobotArmConfiguration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RobotArmConfiguration_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_robot_5farm_5fpose_2eproto() {
  protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "robot_arm_pose.proto");
  GOOGLE_CHECK(file != NULL);
  RobotArm_descriptor_ = file->message_type(0);
  static const int RobotArm_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm, pose_),
  };
  RobotArm_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RobotArm_descriptor_,
      RobotArm::default_instance_,
      RobotArm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RobotArm));
  RobotArm_Pose_descriptor_ = RobotArm_descriptor_->nested_type(0);
  static const int RobotArm_Pose_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, joint_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, joint_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, joint_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, joint_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, joint_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, joint_6_),
  };
  RobotArm_Pose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RobotArm_Pose_descriptor_,
      RobotArm_Pose::default_instance_,
      RobotArm_Pose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArm_Pose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RobotArm_Pose));
  RobotArmConfiguration_descriptor_ = file->message_type(1);
  static const int RobotArmConfiguration_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArmConfiguration, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArmConfiguration, arm_pose_),
  };
  RobotArmConfiguration_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RobotArmConfiguration_descriptor_,
      RobotArmConfiguration::default_instance_,
      RobotArmConfiguration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArmConfiguration, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotArmConfiguration, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RobotArmConfiguration));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_robot_5farm_5fpose_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RobotArm_descriptor_, &RobotArm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RobotArm_Pose_descriptor_, &RobotArm_Pose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RobotArmConfiguration_descriptor_, &RobotArmConfiguration::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_robot_5farm_5fpose_2eproto() {
  delete RobotArm::default_instance_;
  delete RobotArm_reflection_;
  delete RobotArm_Pose::default_instance_;
  delete RobotArm_Pose_reflection_;
  delete RobotArmConfiguration::default_instance_;
  delete RobotArmConfiguration_reflection_;
}

void protobuf_AddDesc_robot_5farm_5fpose_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024robot_arm_pose.proto\022\020mission_protobuf"
    "\"\265\001\n\010RobotArm\022-\n\004pose\030\001 \002(\0132\037.mission_pr"
    "otobuf.RobotArm.Pose\032z\n\004Pose\022\014\n\004name\030\001 \002"
    "(\t\022\017\n\007joint_1\030\002 \002(\001\022\017\n\007joint_2\030\003 \002(\001\022\017\n\007"
    "joint_3\030\004 \002(\001\022\017\n\007joint_4\030\005 \002(\001\022\017\n\007joint_"
    "5\030\006 \002(\001\022\017\n\007joint_6\030\007 \002(\001\"Q\n\025RobotArmConf"
    "iguration\022\n\n\002id\030\001 \002(\005\022,\n\010arm_pose\030\002 \003(\0132"
    "\032.mission_protobuf.RobotArmB1\n\037org.missi"
    "on_planner.common_msgsB\016RobotArmProtos", 358);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "robot_arm_pose.proto", &protobuf_RegisterTypes);
  RobotArm::default_instance_ = new RobotArm();
  RobotArm_Pose::default_instance_ = new RobotArm_Pose();
  RobotArmConfiguration::default_instance_ = new RobotArmConfiguration();
  RobotArm::default_instance_->InitAsDefaultInstance();
  RobotArm_Pose::default_instance_->InitAsDefaultInstance();
  RobotArmConfiguration::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_robot_5farm_5fpose_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_robot_5farm_5fpose_2eproto {
  StaticDescriptorInitializer_robot_5farm_5fpose_2eproto() {
    protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  }
} static_descriptor_initializer_robot_5farm_5fpose_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RobotArm_Pose::kNameFieldNumber;
const int RobotArm_Pose::kJoint1FieldNumber;
const int RobotArm_Pose::kJoint2FieldNumber;
const int RobotArm_Pose::kJoint3FieldNumber;
const int RobotArm_Pose::kJoint4FieldNumber;
const int RobotArm_Pose::kJoint5FieldNumber;
const int RobotArm_Pose::kJoint6FieldNumber;
#endif  // !_MSC_VER

RobotArm_Pose::RobotArm_Pose()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mission_protobuf.RobotArm.Pose)
}

void RobotArm_Pose::InitAsDefaultInstance() {
}

RobotArm_Pose::RobotArm_Pose(const RobotArm_Pose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mission_protobuf.RobotArm.Pose)
}

void RobotArm_Pose::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  joint_1_ = 0;
  joint_2_ = 0;
  joint_3_ = 0;
  joint_4_ = 0;
  joint_5_ = 0;
  joint_6_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RobotArm_Pose::~RobotArm_Pose() {
  // @@protoc_insertion_point(destructor:mission_protobuf.RobotArm.Pose)
  SharedDtor();
}

void RobotArm_Pose::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RobotArm_Pose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotArm_Pose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotArm_Pose_descriptor_;
}

const RobotArm_Pose& RobotArm_Pose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  return *default_instance_;
}

RobotArm_Pose* RobotArm_Pose::default_instance_ = NULL;

RobotArm_Pose* RobotArm_Pose::New() const {
  return new RobotArm_Pose;
}

void RobotArm_Pose::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RobotArm_Pose*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(joint_1_, joint_6_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RobotArm_Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mission_protobuf.RobotArm.Pose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_joint_1;
        break;
      }

      // required double joint_1 = 2;
      case 2: {
        if (tag == 17) {
         parse_joint_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &joint_1_)));
          set_has_joint_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_joint_2;
        break;
      }

      // required double joint_2 = 3;
      case 3: {
        if (tag == 25) {
         parse_joint_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &joint_2_)));
          set_has_joint_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_joint_3;
        break;
      }

      // required double joint_3 = 4;
      case 4: {
        if (tag == 33) {
         parse_joint_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &joint_3_)));
          set_has_joint_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_joint_4;
        break;
      }

      // required double joint_4 = 5;
      case 5: {
        if (tag == 41) {
         parse_joint_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &joint_4_)));
          set_has_joint_4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_joint_5;
        break;
      }

      // required double joint_5 = 6;
      case 6: {
        if (tag == 49) {
         parse_joint_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &joint_5_)));
          set_has_joint_5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_joint_6;
        break;
      }

      // required double joint_6 = 7;
      case 7: {
        if (tag == 57) {
         parse_joint_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &joint_6_)));
          set_has_joint_6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mission_protobuf.RobotArm.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mission_protobuf.RobotArm.Pose)
  return false;
#undef DO_
}

void RobotArm_Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mission_protobuf.RobotArm.Pose)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required double joint_1 = 2;
  if (has_joint_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->joint_1(), output);
  }

  // required double joint_2 = 3;
  if (has_joint_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->joint_2(), output);
  }

  // required double joint_3 = 4;
  if (has_joint_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->joint_3(), output);
  }

  // required double joint_4 = 5;
  if (has_joint_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->joint_4(), output);
  }

  // required double joint_5 = 6;
  if (has_joint_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->joint_5(), output);
  }

  // required double joint_6 = 7;
  if (has_joint_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->joint_6(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mission_protobuf.RobotArm.Pose)
}

::google::protobuf::uint8* RobotArm_Pose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mission_protobuf.RobotArm.Pose)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required double joint_1 = 2;
  if (has_joint_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->joint_1(), target);
  }

  // required double joint_2 = 3;
  if (has_joint_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->joint_2(), target);
  }

  // required double joint_3 = 4;
  if (has_joint_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->joint_3(), target);
  }

  // required double joint_4 = 5;
  if (has_joint_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->joint_4(), target);
  }

  // required double joint_5 = 6;
  if (has_joint_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->joint_5(), target);
  }

  // required double joint_6 = 7;
  if (has_joint_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->joint_6(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mission_protobuf.RobotArm.Pose)
  return target;
}

int RobotArm_Pose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required double joint_1 = 2;
    if (has_joint_1()) {
      total_size += 1 + 8;
    }

    // required double joint_2 = 3;
    if (has_joint_2()) {
      total_size += 1 + 8;
    }

    // required double joint_3 = 4;
    if (has_joint_3()) {
      total_size += 1 + 8;
    }

    // required double joint_4 = 5;
    if (has_joint_4()) {
      total_size += 1 + 8;
    }

    // required double joint_5 = 6;
    if (has_joint_5()) {
      total_size += 1 + 8;
    }

    // required double joint_6 = 7;
    if (has_joint_6()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotArm_Pose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RobotArm_Pose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RobotArm_Pose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RobotArm_Pose::MergeFrom(const RobotArm_Pose& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_joint_1()) {
      set_joint_1(from.joint_1());
    }
    if (from.has_joint_2()) {
      set_joint_2(from.joint_2());
    }
    if (from.has_joint_3()) {
      set_joint_3(from.joint_3());
    }
    if (from.has_joint_4()) {
      set_joint_4(from.joint_4());
    }
    if (from.has_joint_5()) {
      set_joint_5(from.joint_5());
    }
    if (from.has_joint_6()) {
      set_joint_6(from.joint_6());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RobotArm_Pose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotArm_Pose::CopyFrom(const RobotArm_Pose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotArm_Pose::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void RobotArm_Pose::Swap(RobotArm_Pose* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(joint_1_, other->joint_1_);
    std::swap(joint_2_, other->joint_2_);
    std::swap(joint_3_, other->joint_3_);
    std::swap(joint_4_, other->joint_4_);
    std::swap(joint_5_, other->joint_5_);
    std::swap(joint_6_, other->joint_6_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RobotArm_Pose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RobotArm_Pose_descriptor_;
  metadata.reflection = RobotArm_Pose_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int RobotArm::kPoseFieldNumber;
#endif  // !_MSC_VER

RobotArm::RobotArm()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mission_protobuf.RobotArm)
}

void RobotArm::InitAsDefaultInstance() {
  pose_ = const_cast< ::mission_protobuf::RobotArm_Pose*>(&::mission_protobuf::RobotArm_Pose::default_instance());
}

RobotArm::RobotArm(const RobotArm& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mission_protobuf.RobotArm)
}

void RobotArm::SharedCtor() {
  _cached_size_ = 0;
  pose_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RobotArm::~RobotArm() {
  // @@protoc_insertion_point(destructor:mission_protobuf.RobotArm)
  SharedDtor();
}

void RobotArm::SharedDtor() {
  if (this != default_instance_) {
    delete pose_;
  }
}

void RobotArm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotArm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotArm_descriptor_;
}

const RobotArm& RobotArm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  return *default_instance_;
}

RobotArm* RobotArm::default_instance_ = NULL;

RobotArm* RobotArm::New() const {
  return new RobotArm;
}

void RobotArm::Clear() {
  if (has_pose()) {
    if (pose_ != NULL) pose_->::mission_protobuf::RobotArm_Pose::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RobotArm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mission_protobuf.RobotArm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mission_protobuf.RobotArm.Pose pose = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mission_protobuf.RobotArm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mission_protobuf.RobotArm)
  return false;
#undef DO_
}

void RobotArm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mission_protobuf.RobotArm)
  // required .mission_protobuf.RobotArm.Pose pose = 1;
  if (has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pose(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mission_protobuf.RobotArm)
}

::google::protobuf::uint8* RobotArm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mission_protobuf.RobotArm)
  // required .mission_protobuf.RobotArm.Pose pose = 1;
  if (has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pose(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mission_protobuf.RobotArm)
  return target;
}

int RobotArm::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .mission_protobuf.RobotArm.Pose pose = 1;
    if (has_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pose());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotArm::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RobotArm* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RobotArm*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RobotArm::MergeFrom(const RobotArm& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pose()) {
      mutable_pose()->::mission_protobuf::RobotArm_Pose::MergeFrom(from.pose());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RobotArm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotArm::CopyFrom(const RobotArm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotArm::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_pose()) {
    if (!this->pose().IsInitialized()) return false;
  }
  return true;
}

void RobotArm::Swap(RobotArm* other) {
  if (other != this) {
    std::swap(pose_, other->pose_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RobotArm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RobotArm_descriptor_;
  metadata.reflection = RobotArm_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RobotArmConfiguration::kIdFieldNumber;
const int RobotArmConfiguration::kArmPoseFieldNumber;
#endif  // !_MSC_VER

RobotArmConfiguration::RobotArmConfiguration()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mission_protobuf.RobotArmConfiguration)
}

void RobotArmConfiguration::InitAsDefaultInstance() {
}

RobotArmConfiguration::RobotArmConfiguration(const RobotArmConfiguration& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mission_protobuf.RobotArmConfiguration)
}

void RobotArmConfiguration::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RobotArmConfiguration::~RobotArmConfiguration() {
  // @@protoc_insertion_point(destructor:mission_protobuf.RobotArmConfiguration)
  SharedDtor();
}

void RobotArmConfiguration::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RobotArmConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotArmConfiguration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotArmConfiguration_descriptor_;
}

const RobotArmConfiguration& RobotArmConfiguration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  return *default_instance_;
}

RobotArmConfiguration* RobotArmConfiguration::default_instance_ = NULL;

RobotArmConfiguration* RobotArmConfiguration::New() const {
  return new RobotArmConfiguration;
}

void RobotArmConfiguration::Clear() {
  id_ = 0;
  arm_pose_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RobotArmConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mission_protobuf.RobotArmConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arm_pose;
        break;
      }

      // repeated .mission_protobuf.RobotArm arm_pose = 2;
      case 2: {
        if (tag == 18) {
         parse_arm_pose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arm_pose()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arm_pose;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mission_protobuf.RobotArmConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mission_protobuf.RobotArmConfiguration)
  return false;
#undef DO_
}

void RobotArmConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mission_protobuf.RobotArmConfiguration)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .mission_protobuf.RobotArm arm_pose = 2;
  for (int i = 0; i < this->arm_pose_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arm_pose(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mission_protobuf.RobotArmConfiguration)
}

::google::protobuf::uint8* RobotArmConfiguration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mission_protobuf.RobotArmConfiguration)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .mission_protobuf.RobotArm arm_pose = 2;
  for (int i = 0; i < this->arm_pose_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arm_pose(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mission_protobuf.RobotArmConfiguration)
  return target;
}

int RobotArmConfiguration::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  // repeated .mission_protobuf.RobotArm arm_pose = 2;
  total_size += 1 * this->arm_pose_size();
  for (int i = 0; i < this->arm_pose_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arm_pose(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotArmConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RobotArmConfiguration* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RobotArmConfiguration*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RobotArmConfiguration::MergeFrom(const RobotArmConfiguration& from) {
  GOOGLE_CHECK_NE(&from, this);
  arm_pose_.MergeFrom(from.arm_pose_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RobotArmConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotArmConfiguration::CopyFrom(const RobotArmConfiguration& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotArmConfiguration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->arm_pose())) return false;
  return true;
}

void RobotArmConfiguration::Swap(RobotArmConfiguration* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    arm_pose_.Swap(&other->arm_pose_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RobotArmConfiguration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RobotArmConfiguration_descriptor_;
  metadata.reflection = RobotArmConfiguration_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mission_protobuf

// @@protoc_insertion_point(global_scope)
