// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_arm_pose.proto

#ifndef PROTOBUF_robot_5farm_5fpose_2eproto__INCLUDED
#define PROTOBUF_robot_5farm_5fpose_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mission_protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_robot_5farm_5fpose_2eproto();
void protobuf_AssignDesc_robot_5farm_5fpose_2eproto();
void protobuf_ShutdownFile_robot_5farm_5fpose_2eproto();

class RobotArm;
class RobotArm_Pose;
class RobotArmConfiguration;

// ===================================================================

class RobotArm_Pose : public ::google::protobuf::Message {
 public:
  RobotArm_Pose();
  virtual ~RobotArm_Pose();

  RobotArm_Pose(const RobotArm_Pose& from);

  inline RobotArm_Pose& operator=(const RobotArm_Pose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotArm_Pose& default_instance();

  void Swap(RobotArm_Pose* other);

  // implements Message ----------------------------------------------

  RobotArm_Pose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotArm_Pose& from);
  void MergeFrom(const RobotArm_Pose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required double joint_1 = 2;
  inline bool has_joint_1() const;
  inline void clear_joint_1();
  static const int kJoint1FieldNumber = 2;
  inline double joint_1() const;
  inline void set_joint_1(double value);

  // required double joint_2 = 3;
  inline bool has_joint_2() const;
  inline void clear_joint_2();
  static const int kJoint2FieldNumber = 3;
  inline double joint_2() const;
  inline void set_joint_2(double value);

  // required double joint_3 = 4;
  inline bool has_joint_3() const;
  inline void clear_joint_3();
  static const int kJoint3FieldNumber = 4;
  inline double joint_3() const;
  inline void set_joint_3(double value);

  // required double joint_4 = 5;
  inline bool has_joint_4() const;
  inline void clear_joint_4();
  static const int kJoint4FieldNumber = 5;
  inline double joint_4() const;
  inline void set_joint_4(double value);

  // required double joint_5 = 6;
  inline bool has_joint_5() const;
  inline void clear_joint_5();
  static const int kJoint5FieldNumber = 6;
  inline double joint_5() const;
  inline void set_joint_5(double value);

  // required double joint_6 = 7;
  inline bool has_joint_6() const;
  inline void clear_joint_6();
  static const int kJoint6FieldNumber = 7;
  inline double joint_6() const;
  inline void set_joint_6(double value);

  // @@protoc_insertion_point(class_scope:mission_protobuf.RobotArm.Pose)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_joint_1();
  inline void clear_has_joint_1();
  inline void set_has_joint_2();
  inline void clear_has_joint_2();
  inline void set_has_joint_3();
  inline void clear_has_joint_3();
  inline void set_has_joint_4();
  inline void clear_has_joint_4();
  inline void set_has_joint_5();
  inline void clear_has_joint_5();
  inline void set_has_joint_6();
  inline void clear_has_joint_6();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  double joint_1_;
  double joint_2_;
  double joint_3_;
  double joint_4_;
  double joint_5_;
  double joint_6_;
  friend void  protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  friend void protobuf_AssignDesc_robot_5farm_5fpose_2eproto();
  friend void protobuf_ShutdownFile_robot_5farm_5fpose_2eproto();

  void InitAsDefaultInstance();
  static RobotArm_Pose* default_instance_;
};
// -------------------------------------------------------------------

class RobotArm : public ::google::protobuf::Message {
 public:
  RobotArm();
  virtual ~RobotArm();

  RobotArm(const RobotArm& from);

  inline RobotArm& operator=(const RobotArm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotArm& default_instance();

  void Swap(RobotArm* other);

  // implements Message ----------------------------------------------

  RobotArm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotArm& from);
  void MergeFrom(const RobotArm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RobotArm_Pose Pose;

  // accessors -------------------------------------------------------

  // required .mission_protobuf.RobotArm.Pose pose = 1;
  inline bool has_pose() const;
  inline void clear_pose();
  static const int kPoseFieldNumber = 1;
  inline const ::mission_protobuf::RobotArm_Pose& pose() const;
  inline ::mission_protobuf::RobotArm_Pose* mutable_pose();
  inline ::mission_protobuf::RobotArm_Pose* release_pose();
  inline void set_allocated_pose(::mission_protobuf::RobotArm_Pose* pose);

  // @@protoc_insertion_point(class_scope:mission_protobuf.RobotArm)
 private:
  inline void set_has_pose();
  inline void clear_has_pose();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::mission_protobuf::RobotArm_Pose* pose_;
  friend void  protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  friend void protobuf_AssignDesc_robot_5farm_5fpose_2eproto();
  friend void protobuf_ShutdownFile_robot_5farm_5fpose_2eproto();

  void InitAsDefaultInstance();
  static RobotArm* default_instance_;
};
// -------------------------------------------------------------------

class RobotArmConfiguration : public ::google::protobuf::Message {
 public:
  RobotArmConfiguration();
  virtual ~RobotArmConfiguration();

  RobotArmConfiguration(const RobotArmConfiguration& from);

  inline RobotArmConfiguration& operator=(const RobotArmConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotArmConfiguration& default_instance();

  void Swap(RobotArmConfiguration* other);

  // implements Message ----------------------------------------------

  RobotArmConfiguration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotArmConfiguration& from);
  void MergeFrom(const RobotArmConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .mission_protobuf.RobotArm arm_pose = 2;
  inline int arm_pose_size() const;
  inline void clear_arm_pose();
  static const int kArmPoseFieldNumber = 2;
  inline const ::mission_protobuf::RobotArm& arm_pose(int index) const;
  inline ::mission_protobuf::RobotArm* mutable_arm_pose(int index);
  inline ::mission_protobuf::RobotArm* add_arm_pose();
  inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::RobotArm >&
      arm_pose() const;
  inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::RobotArm >*
      mutable_arm_pose();

  // @@protoc_insertion_point(class_scope:mission_protobuf.RobotArmConfiguration)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mission_protobuf::RobotArm > arm_pose_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_robot_5farm_5fpose_2eproto();
  friend void protobuf_AssignDesc_robot_5farm_5fpose_2eproto();
  friend void protobuf_ShutdownFile_robot_5farm_5fpose_2eproto();

  void InitAsDefaultInstance();
  static RobotArmConfiguration* default_instance_;
};
// ===================================================================


// ===================================================================

// RobotArm_Pose

// required string name = 1;
inline bool RobotArm_Pose::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotArm_Pose::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotArm_Pose::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotArm_Pose::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RobotArm_Pose::name() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.name)
  return *name_;
}
inline void RobotArm_Pose::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.name)
}
inline void RobotArm_Pose::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:mission_protobuf.RobotArm.Pose.name)
}
inline void RobotArm_Pose::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mission_protobuf.RobotArm.Pose.name)
}
inline ::std::string* RobotArm_Pose::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:mission_protobuf.RobotArm.Pose.name)
  return name_;
}
inline ::std::string* RobotArm_Pose::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RobotArm_Pose::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.RobotArm.Pose.name)
}

// required double joint_1 = 2;
inline bool RobotArm_Pose::has_joint_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotArm_Pose::set_has_joint_1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotArm_Pose::clear_has_joint_1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotArm_Pose::clear_joint_1() {
  joint_1_ = 0;
  clear_has_joint_1();
}
inline double RobotArm_Pose::joint_1() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.joint_1)
  return joint_1_;
}
inline void RobotArm_Pose::set_joint_1(double value) {
  set_has_joint_1();
  joint_1_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.joint_1)
}

// required double joint_2 = 3;
inline bool RobotArm_Pose::has_joint_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotArm_Pose::set_has_joint_2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotArm_Pose::clear_has_joint_2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotArm_Pose::clear_joint_2() {
  joint_2_ = 0;
  clear_has_joint_2();
}
inline double RobotArm_Pose::joint_2() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.joint_2)
  return joint_2_;
}
inline void RobotArm_Pose::set_joint_2(double value) {
  set_has_joint_2();
  joint_2_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.joint_2)
}

// required double joint_3 = 4;
inline bool RobotArm_Pose::has_joint_3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotArm_Pose::set_has_joint_3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotArm_Pose::clear_has_joint_3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotArm_Pose::clear_joint_3() {
  joint_3_ = 0;
  clear_has_joint_3();
}
inline double RobotArm_Pose::joint_3() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.joint_3)
  return joint_3_;
}
inline void RobotArm_Pose::set_joint_3(double value) {
  set_has_joint_3();
  joint_3_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.joint_3)
}

// required double joint_4 = 5;
inline bool RobotArm_Pose::has_joint_4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotArm_Pose::set_has_joint_4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RobotArm_Pose::clear_has_joint_4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RobotArm_Pose::clear_joint_4() {
  joint_4_ = 0;
  clear_has_joint_4();
}
inline double RobotArm_Pose::joint_4() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.joint_4)
  return joint_4_;
}
inline void RobotArm_Pose::set_joint_4(double value) {
  set_has_joint_4();
  joint_4_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.joint_4)
}

// required double joint_5 = 6;
inline bool RobotArm_Pose::has_joint_5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RobotArm_Pose::set_has_joint_5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RobotArm_Pose::clear_has_joint_5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RobotArm_Pose::clear_joint_5() {
  joint_5_ = 0;
  clear_has_joint_5();
}
inline double RobotArm_Pose::joint_5() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.joint_5)
  return joint_5_;
}
inline void RobotArm_Pose::set_joint_5(double value) {
  set_has_joint_5();
  joint_5_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.joint_5)
}

// required double joint_6 = 7;
inline bool RobotArm_Pose::has_joint_6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RobotArm_Pose::set_has_joint_6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RobotArm_Pose::clear_has_joint_6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RobotArm_Pose::clear_joint_6() {
  joint_6_ = 0;
  clear_has_joint_6();
}
inline double RobotArm_Pose::joint_6() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.Pose.joint_6)
  return joint_6_;
}
inline void RobotArm_Pose::set_joint_6(double value) {
  set_has_joint_6();
  joint_6_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArm.Pose.joint_6)
}

// -------------------------------------------------------------------

// RobotArm

// required .mission_protobuf.RobotArm.Pose pose = 1;
inline bool RobotArm::has_pose() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotArm::set_has_pose() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotArm::clear_has_pose() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotArm::clear_pose() {
  if (pose_ != NULL) pose_->::mission_protobuf::RobotArm_Pose::Clear();
  clear_has_pose();
}
inline const ::mission_protobuf::RobotArm_Pose& RobotArm::pose() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArm.pose)
  return pose_ != NULL ? *pose_ : *default_instance_->pose_;
}
inline ::mission_protobuf::RobotArm_Pose* RobotArm::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) pose_ = new ::mission_protobuf::RobotArm_Pose;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.RobotArm.pose)
  return pose_;
}
inline ::mission_protobuf::RobotArm_Pose* RobotArm::release_pose() {
  clear_has_pose();
  ::mission_protobuf::RobotArm_Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline void RobotArm::set_allocated_pose(::mission_protobuf::RobotArm_Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.RobotArm.pose)
}

// -------------------------------------------------------------------

// RobotArmConfiguration

// required int32 id = 1;
inline bool RobotArmConfiguration::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotArmConfiguration::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotArmConfiguration::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotArmConfiguration::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RobotArmConfiguration::id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArmConfiguration.id)
  return id_;
}
inline void RobotArmConfiguration::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.RobotArmConfiguration.id)
}

// repeated .mission_protobuf.RobotArm arm_pose = 2;
inline int RobotArmConfiguration::arm_pose_size() const {
  return arm_pose_.size();
}
inline void RobotArmConfiguration::clear_arm_pose() {
  arm_pose_.Clear();
}
inline const ::mission_protobuf::RobotArm& RobotArmConfiguration::arm_pose(int index) const {
  // @@protoc_insertion_point(field_get:mission_protobuf.RobotArmConfiguration.arm_pose)
  return arm_pose_.Get(index);
}
inline ::mission_protobuf::RobotArm* RobotArmConfiguration::mutable_arm_pose(int index) {
  // @@protoc_insertion_point(field_mutable:mission_protobuf.RobotArmConfiguration.arm_pose)
  return arm_pose_.Mutable(index);
}
inline ::mission_protobuf::RobotArm* RobotArmConfiguration::add_arm_pose() {
  // @@protoc_insertion_point(field_add:mission_protobuf.RobotArmConfiguration.arm_pose)
  return arm_pose_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::RobotArm >&
RobotArmConfiguration::arm_pose() const {
  // @@protoc_insertion_point(field_list:mission_protobuf.RobotArmConfiguration.arm_pose)
  return arm_pose_;
}
inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::RobotArm >*
RobotArmConfiguration::mutable_arm_pose() {
  // @@protoc_insertion_point(field_mutable_list:mission_protobuf.RobotArmConfiguration.arm_pose)
  return &arm_pose_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mission_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_robot_5farm_5fpose_2eproto__INCLUDED
