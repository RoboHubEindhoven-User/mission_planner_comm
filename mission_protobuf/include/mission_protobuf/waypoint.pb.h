// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: waypoint.proto

#ifndef PROTOBUF_waypoint_2eproto__INCLUDED
#define PROTOBUF_waypoint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "task_action.pb.h"
#include "geometry.pb.h"
// @@protoc_insertion_point(includes)

namespace mission_protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_waypoint_2eproto();
void protobuf_AssignDesc_waypoint_2eproto();
void protobuf_ShutdownFile_waypoint_2eproto();

class Waypoint;
class Waypoint_ServiceArea;
class WaypointConfiguration;

// ===================================================================

class Waypoint_ServiceArea : public ::google::protobuf::Message {
 public:
  Waypoint_ServiceArea();
  virtual ~Waypoint_ServiceArea();

  Waypoint_ServiceArea(const Waypoint_ServiceArea& from);

  inline Waypoint_ServiceArea& operator=(const Waypoint_ServiceArea& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Waypoint_ServiceArea& default_instance();

  void Swap(Waypoint_ServiceArea* other);

  // implements Message ----------------------------------------------

  Waypoint_ServiceArea* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Waypoint_ServiceArea& from);
  void MergeFrom(const Waypoint_ServiceArea& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string description = 1;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 1;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // required double length = 2;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 2;
  inline double length() const;
  inline void set_length(double value);

  // required double width = 3;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 3;
  inline double width() const;
  inline void set_width(double value);

  // required double height = 4;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 4;
  inline double height() const;
  inline void set_height(double value);

  // required double diameter = 5;
  inline bool has_diameter() const;
  inline void clear_diameter();
  static const int kDiameterFieldNumber = 5;
  inline double diameter() const;
  inline void set_diameter(double value);

  // required double tilt_angle = 6;
  inline bool has_tilt_angle() const;
  inline void clear_tilt_angle();
  static const int kTiltAngleFieldNumber = 6;
  inline double tilt_angle() const;
  inline void set_tilt_angle(double value);

  // @@protoc_insertion_point(class_scope:mission_protobuf.Waypoint.ServiceArea)
 private:
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_diameter();
  inline void clear_has_diameter();
  inline void set_has_tilt_angle();
  inline void clear_has_tilt_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* description_;
  double length_;
  double width_;
  double height_;
  double diameter_;
  double tilt_angle_;
  friend void  protobuf_AddDesc_waypoint_2eproto();
  friend void protobuf_AssignDesc_waypoint_2eproto();
  friend void protobuf_ShutdownFile_waypoint_2eproto();

  void InitAsDefaultInstance();
  static Waypoint_ServiceArea* default_instance_;
};
// -------------------------------------------------------------------

class Waypoint : public ::google::protobuf::Message {
 public:
  Waypoint();
  virtual ~Waypoint();

  Waypoint(const Waypoint& from);

  inline Waypoint& operator=(const Waypoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Waypoint& default_instance();

  void Swap(Waypoint* other);

  // implements Message ----------------------------------------------

  Waypoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Waypoint& from);
  void MergeFrom(const Waypoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Waypoint_ServiceArea ServiceArea;

  // accessors -------------------------------------------------------

  // required .mission_protobuf.LocationIdentifier location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::mission_protobuf::LocationIdentifier& location() const;
  inline ::mission_protobuf::LocationIdentifier* mutable_location();
  inline ::mission_protobuf::LocationIdentifier* release_location();
  inline void set_allocated_location(::mission_protobuf::LocationIdentifier* location);

  // required .mission_protobuf.Geometry geometry = 2;
  inline bool has_geometry() const;
  inline void clear_geometry();
  static const int kGeometryFieldNumber = 2;
  inline const ::mission_protobuf::Geometry& geometry() const;
  inline ::mission_protobuf::Geometry* mutable_geometry();
  inline ::mission_protobuf::Geometry* release_geometry();
  inline void set_allocated_geometry(::mission_protobuf::Geometry* geometry);

  // optional .mission_protobuf.Waypoint.ServiceArea service_area = 3;
  inline bool has_service_area() const;
  inline void clear_service_area();
  static const int kServiceAreaFieldNumber = 3;
  inline const ::mission_protobuf::Waypoint_ServiceArea& service_area() const;
  inline ::mission_protobuf::Waypoint_ServiceArea* mutable_service_area();
  inline ::mission_protobuf::Waypoint_ServiceArea* release_service_area();
  inline void set_allocated_service_area(::mission_protobuf::Waypoint_ServiceArea* service_area);

  // optional bool should_scan = 4;
  inline bool has_should_scan() const;
  inline void clear_should_scan();
  static const int kShouldScanFieldNumber = 4;
  inline bool should_scan() const;
  inline void set_should_scan(bool value);

  // @@protoc_insertion_point(class_scope:mission_protobuf.Waypoint)
 private:
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_geometry();
  inline void clear_has_geometry();
  inline void set_has_service_area();
  inline void clear_has_service_area();
  inline void set_has_should_scan();
  inline void clear_has_should_scan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::mission_protobuf::LocationIdentifier* location_;
  ::mission_protobuf::Geometry* geometry_;
  ::mission_protobuf::Waypoint_ServiceArea* service_area_;
  bool should_scan_;
  friend void  protobuf_AddDesc_waypoint_2eproto();
  friend void protobuf_AssignDesc_waypoint_2eproto();
  friend void protobuf_ShutdownFile_waypoint_2eproto();

  void InitAsDefaultInstance();
  static Waypoint* default_instance_;
};
// -------------------------------------------------------------------

class WaypointConfiguration : public ::google::protobuf::Message {
 public:
  WaypointConfiguration();
  virtual ~WaypointConfiguration();

  WaypointConfiguration(const WaypointConfiguration& from);

  inline WaypointConfiguration& operator=(const WaypointConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WaypointConfiguration& default_instance();

  void Swap(WaypointConfiguration* other);

  // implements Message ----------------------------------------------

  WaypointConfiguration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WaypointConfiguration& from);
  void MergeFrom(const WaypointConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .mission_protobuf.Waypoint wapoint = 2;
  inline int wapoint_size() const;
  inline void clear_wapoint();
  static const int kWapointFieldNumber = 2;
  inline const ::mission_protobuf::Waypoint& wapoint(int index) const;
  inline ::mission_protobuf::Waypoint* mutable_wapoint(int index);
  inline ::mission_protobuf::Waypoint* add_wapoint();
  inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Waypoint >&
      wapoint() const;
  inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Waypoint >*
      mutable_wapoint();

  // @@protoc_insertion_point(class_scope:mission_protobuf.WaypointConfiguration)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Waypoint > wapoint_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_waypoint_2eproto();
  friend void protobuf_AssignDesc_waypoint_2eproto();
  friend void protobuf_ShutdownFile_waypoint_2eproto();

  void InitAsDefaultInstance();
  static WaypointConfiguration* default_instance_;
};
// ===================================================================


// ===================================================================

// Waypoint_ServiceArea

// required string description = 1;
inline bool Waypoint_ServiceArea::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Waypoint_ServiceArea::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Waypoint_ServiceArea::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Waypoint_ServiceArea::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& Waypoint_ServiceArea::description() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.ServiceArea.description)
  return *description_;
}
inline void Waypoint_ServiceArea::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.ServiceArea.description)
}
inline void Waypoint_ServiceArea::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:mission_protobuf.Waypoint.ServiceArea.description)
}
inline void Waypoint_ServiceArea::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mission_protobuf.Waypoint.ServiceArea.description)
}
inline ::std::string* Waypoint_ServiceArea::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Waypoint.ServiceArea.description)
  return description_;
}
inline ::std::string* Waypoint_ServiceArea::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Waypoint_ServiceArea::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Waypoint.ServiceArea.description)
}

// required double length = 2;
inline bool Waypoint_ServiceArea::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Waypoint_ServiceArea::set_has_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Waypoint_ServiceArea::clear_has_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Waypoint_ServiceArea::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline double Waypoint_ServiceArea::length() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.ServiceArea.length)
  return length_;
}
inline void Waypoint_ServiceArea::set_length(double value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.ServiceArea.length)
}

// required double width = 3;
inline bool Waypoint_ServiceArea::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Waypoint_ServiceArea::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Waypoint_ServiceArea::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Waypoint_ServiceArea::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline double Waypoint_ServiceArea::width() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.ServiceArea.width)
  return width_;
}
inline void Waypoint_ServiceArea::set_width(double value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.ServiceArea.width)
}

// required double height = 4;
inline bool Waypoint_ServiceArea::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Waypoint_ServiceArea::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Waypoint_ServiceArea::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Waypoint_ServiceArea::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline double Waypoint_ServiceArea::height() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.ServiceArea.height)
  return height_;
}
inline void Waypoint_ServiceArea::set_height(double value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.ServiceArea.height)
}

// required double diameter = 5;
inline bool Waypoint_ServiceArea::has_diameter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Waypoint_ServiceArea::set_has_diameter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Waypoint_ServiceArea::clear_has_diameter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Waypoint_ServiceArea::clear_diameter() {
  diameter_ = 0;
  clear_has_diameter();
}
inline double Waypoint_ServiceArea::diameter() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.ServiceArea.diameter)
  return diameter_;
}
inline void Waypoint_ServiceArea::set_diameter(double value) {
  set_has_diameter();
  diameter_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.ServiceArea.diameter)
}

// required double tilt_angle = 6;
inline bool Waypoint_ServiceArea::has_tilt_angle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Waypoint_ServiceArea::set_has_tilt_angle() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Waypoint_ServiceArea::clear_has_tilt_angle() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Waypoint_ServiceArea::clear_tilt_angle() {
  tilt_angle_ = 0;
  clear_has_tilt_angle();
}
inline double Waypoint_ServiceArea::tilt_angle() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.ServiceArea.tilt_angle)
  return tilt_angle_;
}
inline void Waypoint_ServiceArea::set_tilt_angle(double value) {
  set_has_tilt_angle();
  tilt_angle_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.ServiceArea.tilt_angle)
}

// -------------------------------------------------------------------

// Waypoint

// required .mission_protobuf.LocationIdentifier location = 1;
inline bool Waypoint::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Waypoint::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Waypoint::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Waypoint::clear_location() {
  if (location_ != NULL) location_->::mission_protobuf::LocationIdentifier::Clear();
  clear_has_location();
}
inline const ::mission_protobuf::LocationIdentifier& Waypoint::location() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::mission_protobuf::LocationIdentifier* Waypoint::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::mission_protobuf::LocationIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Waypoint.location)
  return location_;
}
inline ::mission_protobuf::LocationIdentifier* Waypoint::release_location() {
  clear_has_location();
  ::mission_protobuf::LocationIdentifier* temp = location_;
  location_ = NULL;
  return temp;
}
inline void Waypoint::set_allocated_location(::mission_protobuf::LocationIdentifier* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Waypoint.location)
}

// required .mission_protobuf.Geometry geometry = 2;
inline bool Waypoint::has_geometry() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Waypoint::set_has_geometry() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Waypoint::clear_has_geometry() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Waypoint::clear_geometry() {
  if (geometry_ != NULL) geometry_->::mission_protobuf::Geometry::Clear();
  clear_has_geometry();
}
inline const ::mission_protobuf::Geometry& Waypoint::geometry() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.geometry)
  return geometry_ != NULL ? *geometry_ : *default_instance_->geometry_;
}
inline ::mission_protobuf::Geometry* Waypoint::mutable_geometry() {
  set_has_geometry();
  if (geometry_ == NULL) geometry_ = new ::mission_protobuf::Geometry;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Waypoint.geometry)
  return geometry_;
}
inline ::mission_protobuf::Geometry* Waypoint::release_geometry() {
  clear_has_geometry();
  ::mission_protobuf::Geometry* temp = geometry_;
  geometry_ = NULL;
  return temp;
}
inline void Waypoint::set_allocated_geometry(::mission_protobuf::Geometry* geometry) {
  delete geometry_;
  geometry_ = geometry;
  if (geometry) {
    set_has_geometry();
  } else {
    clear_has_geometry();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Waypoint.geometry)
}

// optional .mission_protobuf.Waypoint.ServiceArea service_area = 3;
inline bool Waypoint::has_service_area() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Waypoint::set_has_service_area() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Waypoint::clear_has_service_area() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Waypoint::clear_service_area() {
  if (service_area_ != NULL) service_area_->::mission_protobuf::Waypoint_ServiceArea::Clear();
  clear_has_service_area();
}
inline const ::mission_protobuf::Waypoint_ServiceArea& Waypoint::service_area() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.service_area)
  return service_area_ != NULL ? *service_area_ : *default_instance_->service_area_;
}
inline ::mission_protobuf::Waypoint_ServiceArea* Waypoint::mutable_service_area() {
  set_has_service_area();
  if (service_area_ == NULL) service_area_ = new ::mission_protobuf::Waypoint_ServiceArea;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Waypoint.service_area)
  return service_area_;
}
inline ::mission_protobuf::Waypoint_ServiceArea* Waypoint::release_service_area() {
  clear_has_service_area();
  ::mission_protobuf::Waypoint_ServiceArea* temp = service_area_;
  service_area_ = NULL;
  return temp;
}
inline void Waypoint::set_allocated_service_area(::mission_protobuf::Waypoint_ServiceArea* service_area) {
  delete service_area_;
  service_area_ = service_area;
  if (service_area) {
    set_has_service_area();
  } else {
    clear_has_service_area();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Waypoint.service_area)
}

// optional bool should_scan = 4;
inline bool Waypoint::has_should_scan() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Waypoint::set_has_should_scan() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Waypoint::clear_has_should_scan() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Waypoint::clear_should_scan() {
  should_scan_ = false;
  clear_has_should_scan();
}
inline bool Waypoint::should_scan() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Waypoint.should_scan)
  return should_scan_;
}
inline void Waypoint::set_should_scan(bool value) {
  set_has_should_scan();
  should_scan_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Waypoint.should_scan)
}

// -------------------------------------------------------------------

// WaypointConfiguration

// required int32 id = 1;
inline bool WaypointConfiguration::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WaypointConfiguration::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WaypointConfiguration::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WaypointConfiguration::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WaypointConfiguration::id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.WaypointConfiguration.id)
  return id_;
}
inline void WaypointConfiguration::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.WaypointConfiguration.id)
}

// repeated .mission_protobuf.Waypoint wapoint = 2;
inline int WaypointConfiguration::wapoint_size() const {
  return wapoint_.size();
}
inline void WaypointConfiguration::clear_wapoint() {
  wapoint_.Clear();
}
inline const ::mission_protobuf::Waypoint& WaypointConfiguration::wapoint(int index) const {
  // @@protoc_insertion_point(field_get:mission_protobuf.WaypointConfiguration.wapoint)
  return wapoint_.Get(index);
}
inline ::mission_protobuf::Waypoint* WaypointConfiguration::mutable_wapoint(int index) {
  // @@protoc_insertion_point(field_mutable:mission_protobuf.WaypointConfiguration.wapoint)
  return wapoint_.Mutable(index);
}
inline ::mission_protobuf::Waypoint* WaypointConfiguration::add_wapoint() {
  // @@protoc_insertion_point(field_add:mission_protobuf.WaypointConfiguration.wapoint)
  return wapoint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Waypoint >&
WaypointConfiguration::wapoint() const {
  // @@protoc_insertion_point(field_list:mission_protobuf.WaypointConfiguration.wapoint)
  return wapoint_;
}
inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Waypoint >*
WaypointConfiguration::mutable_wapoint() {
  // @@protoc_insertion_point(field_mutable_list:mission_protobuf.WaypointConfiguration.wapoint)
  return &wapoint_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mission_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_waypoint_2eproto__INCLUDED
