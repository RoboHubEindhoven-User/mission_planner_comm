// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task_action.proto

#ifndef PROTOBUF_task_5faction_2eproto__INCLUDED
#define PROTOBUF_task_5faction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mission_protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_task_5faction_2eproto();
void protobuf_AssignDesc_task_5faction_2eproto();
void protobuf_ShutdownFile_task_5faction_2eproto();

class ObjectIdentifier;
class ObjectConfiguration;
class LocationIdentifier;
class Inventory;
class Inventory_Item;
class Transaction;
class TransactionLog;

enum ObjectIdentifier_ObjectType {
  ObjectIdentifier_ObjectType_F20_20_B = 1,
  ObjectIdentifier_ObjectType_F20_20_G = 2,
  ObjectIdentifier_ObjectType_S40_40_B = 3,
  ObjectIdentifier_ObjectType_S40_40_G = 4,
  ObjectIdentifier_ObjectType_M20_100 = 5,
  ObjectIdentifier_ObjectType_M20 = 6,
  ObjectIdentifier_ObjectType_M30 = 7,
  ObjectIdentifier_ObjectType_R20 = 8,
  ObjectIdentifier_ObjectType_BEARING_BOX = 9,
  ObjectIdentifier_ObjectType_BEARING = 10,
  ObjectIdentifier_ObjectType_AXIS = 11,
  ObjectIdentifier_ObjectType_DISTANCE_TUBE = 12,
  ObjectIdentifier_ObjectType_MOTOR = 13,
  ObjectIdentifier_ObjectType_CONTAINER_B = 14,
  ObjectIdentifier_ObjectType_CONTAINER_R = 15,
  ObjectIdentifier_ObjectType_PICKUP_BLACK_WHITE = 16,
  ObjectIdentifier_ObjectType_PICKUP_CHOCO_MILK = 17,
  ObjectIdentifier_ObjectType_DUPLO_WHITE = 18,
  ObjectIdentifier_ObjectType_DUPLO_CLASSIC = 19,
  ObjectIdentifier_ObjectType_TWIX_SPEKULATIUS = 20,
  ObjectIdentifier_ObjectType_TWIX_WHITE = 21,
  ObjectIdentifier_ObjectType_TWIX_CLASSIC = 22,
  ObjectIdentifier_ObjectType_TWIX_MINI = 23,
  ObjectIdentifier_ObjectType_MARS = 24,
  ObjectIdentifier_ObjectType_MARS_MINI = 25,
  ObjectIdentifier_ObjectType_SNICKERS = 26,
  ObjectIdentifier_ObjectType_SNICKERS_MINI = 27,
  ObjectIdentifier_ObjectType_KITKAT_CLASSIC = 28,
  ObjectIdentifier_ObjectType_KITKAT_WHITE = 29,
  ObjectIdentifier_ObjectType_KITKAT_CHUNKY_WHITE = 30,
  ObjectIdentifier_ObjectType_KITKAT_CHUNKY_CLASSIC = 31,
  ObjectIdentifier_ObjectType_KITKAT_MINI = 32,
  ObjectIdentifier_ObjectType_LION_CLASSIC = 33,
  ObjectIdentifier_ObjectType_LION_MINI = 34,
  ObjectIdentifier_ObjectType_M_M_CRIPSY = 35,
  ObjectIdentifier_ObjectType_M_M_PEANUT = 36,
  ObjectIdentifier_ObjectType_BOUNTY = 37,
  ObjectIdentifier_ObjectType_BOUNTY_MINI = 38,
  ObjectIdentifier_ObjectType_MILKYWAY = 39,
  ObjectIdentifier_ObjectType_MILKYWAY_MINI = 40,
  ObjectIdentifier_ObjectType_RITTERSPORT_NUGAT = 41,
  ObjectIdentifier_ObjectType_RITTERSPORT_KNUSPERKEKS = 42,
  ObjectIdentifier_ObjectType_RITTERSPORT_JOGHURT = 43,
  ObjectIdentifier_ObjectType_RITTERSPORT_KNUSPERFLAKES = 44,
  ObjectIdentifier_ObjectType_RITTERSPORT_NUSS_SPLITTER = 45,
  ObjectIdentifier_ObjectType_RITTERSPORT_MARZIPAN = 46
};
bool ObjectIdentifier_ObjectType_IsValid(int value);
const ObjectIdentifier_ObjectType ObjectIdentifier_ObjectType_ObjectType_MIN = ObjectIdentifier_ObjectType_F20_20_B;
const ObjectIdentifier_ObjectType ObjectIdentifier_ObjectType_ObjectType_MAX = ObjectIdentifier_ObjectType_RITTERSPORT_MARZIPAN;
const int ObjectIdentifier_ObjectType_ObjectType_ARRAYSIZE = ObjectIdentifier_ObjectType_ObjectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObjectIdentifier_ObjectType_descriptor();
inline const ::std::string& ObjectIdentifier_ObjectType_Name(ObjectIdentifier_ObjectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObjectIdentifier_ObjectType_descriptor(), value);
}
inline bool ObjectIdentifier_ObjectType_Parse(
    const ::std::string& name, ObjectIdentifier_ObjectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjectIdentifier_ObjectType>(
    ObjectIdentifier_ObjectType_descriptor(), name, value);
}
enum LocationIdentifier_LocationType {
  LocationIdentifier_LocationType_NONE = -1,
  LocationIdentifier_LocationType_EN = 0,
  LocationIdentifier_LocationType_SH = 1,
  LocationIdentifier_LocationType_WS = 2,
  LocationIdentifier_LocationType_CB = 3,
  LocationIdentifier_LocationType_WP = 4,
  LocationIdentifier_LocationType_PP = 5,
  LocationIdentifier_LocationType_ROBOT = 6,
  LocationIdentifier_LocationType_EX = 100
};
bool LocationIdentifier_LocationType_IsValid(int value);
const LocationIdentifier_LocationType LocationIdentifier_LocationType_LocationType_MIN = LocationIdentifier_LocationType_NONE;
const LocationIdentifier_LocationType LocationIdentifier_LocationType_LocationType_MAX = LocationIdentifier_LocationType_EX;
const int LocationIdentifier_LocationType_LocationType_ARRAYSIZE = LocationIdentifier_LocationType_LocationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationIdentifier_LocationType_descriptor();
inline const ::std::string& LocationIdentifier_LocationType_Name(LocationIdentifier_LocationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationIdentifier_LocationType_descriptor(), value);
}
inline bool LocationIdentifier_LocationType_Parse(
    const ::std::string& name, LocationIdentifier_LocationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationIdentifier_LocationType>(
    LocationIdentifier_LocationType_descriptor(), name, value);
}
enum Inventory_Item_CompType {
  Inventory_Item_CompType_COMP_ID = 2000,
  Inventory_Item_CompType_MSG_TYPE = 203
};
bool Inventory_Item_CompType_IsValid(int value);
const Inventory_Item_CompType Inventory_Item_CompType_CompType_MIN = Inventory_Item_CompType_MSG_TYPE;
const Inventory_Item_CompType Inventory_Item_CompType_CompType_MAX = Inventory_Item_CompType_COMP_ID;
const int Inventory_Item_CompType_CompType_ARRAYSIZE = Inventory_Item_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Inventory_Item_CompType_descriptor();
inline const ::std::string& Inventory_Item_CompType_Name(Inventory_Item_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Inventory_Item_CompType_descriptor(), value);
}
inline bool Inventory_Item_CompType_Parse(
    const ::std::string& name, Inventory_Item_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Inventory_Item_CompType>(
    Inventory_Item_CompType_descriptor(), name, value);
}
enum Inventory_CompType {
  Inventory_CompType_COMP_ID = 2000,
  Inventory_CompType_MSG_TYPE = 200
};
bool Inventory_CompType_IsValid(int value);
const Inventory_CompType Inventory_CompType_CompType_MIN = Inventory_CompType_MSG_TYPE;
const Inventory_CompType Inventory_CompType_CompType_MAX = Inventory_CompType_COMP_ID;
const int Inventory_CompType_CompType_ARRAYSIZE = Inventory_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Inventory_CompType_descriptor();
inline const ::std::string& Inventory_CompType_Name(Inventory_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Inventory_CompType_descriptor(), value);
}
inline bool Inventory_CompType_Parse(
    const ::std::string& name, Inventory_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Inventory_CompType>(
    Inventory_CompType_descriptor(), name, value);
}
enum Transaction_Action {
  Transaction_Action_INSERT = 1,
  Transaction_Action_REMOVE = 2,
  Transaction_Action_MOVE = 3
};
bool Transaction_Action_IsValid(int value);
const Transaction_Action Transaction_Action_Action_MIN = Transaction_Action_INSERT;
const Transaction_Action Transaction_Action_Action_MAX = Transaction_Action_MOVE;
const int Transaction_Action_Action_ARRAYSIZE = Transaction_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* Transaction_Action_descriptor();
inline const ::std::string& Transaction_Action_Name(Transaction_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    Transaction_Action_descriptor(), value);
}
inline bool Transaction_Action_Parse(
    const ::std::string& name, Transaction_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Transaction_Action>(
    Transaction_Action_descriptor(), name, value);
}
enum TransactionLog_CompType {
  TransactionLog_CompType_COMP_ID = 2000,
  TransactionLog_CompType_MSG_TYPE = 201
};
bool TransactionLog_CompType_IsValid(int value);
const TransactionLog_CompType TransactionLog_CompType_CompType_MIN = TransactionLog_CompType_MSG_TYPE;
const TransactionLog_CompType TransactionLog_CompType_CompType_MAX = TransactionLog_CompType_COMP_ID;
const int TransactionLog_CompType_CompType_ARRAYSIZE = TransactionLog_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransactionLog_CompType_descriptor();
inline const ::std::string& TransactionLog_CompType_Name(TransactionLog_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransactionLog_CompType_descriptor(), value);
}
inline bool TransactionLog_CompType_Parse(
    const ::std::string& name, TransactionLog_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransactionLog_CompType>(
    TransactionLog_CompType_descriptor(), name, value);
}
// ===================================================================

class ObjectIdentifier : public ::google::protobuf::Message {
 public:
  ObjectIdentifier();
  virtual ~ObjectIdentifier();

  ObjectIdentifier(const ObjectIdentifier& from);

  inline ObjectIdentifier& operator=(const ObjectIdentifier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectIdentifier& default_instance();

  void Swap(ObjectIdentifier* other);

  // implements Message ----------------------------------------------

  ObjectIdentifier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectIdentifier& from);
  void MergeFrom(const ObjectIdentifier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ObjectIdentifier_ObjectType ObjectType;
  static const ObjectType F20_20_B = ObjectIdentifier_ObjectType_F20_20_B;
  static const ObjectType F20_20_G = ObjectIdentifier_ObjectType_F20_20_G;
  static const ObjectType S40_40_B = ObjectIdentifier_ObjectType_S40_40_B;
  static const ObjectType S40_40_G = ObjectIdentifier_ObjectType_S40_40_G;
  static const ObjectType M20_100 = ObjectIdentifier_ObjectType_M20_100;
  static const ObjectType M20 = ObjectIdentifier_ObjectType_M20;
  static const ObjectType M30 = ObjectIdentifier_ObjectType_M30;
  static const ObjectType R20 = ObjectIdentifier_ObjectType_R20;
  static const ObjectType BEARING_BOX = ObjectIdentifier_ObjectType_BEARING_BOX;
  static const ObjectType BEARING = ObjectIdentifier_ObjectType_BEARING;
  static const ObjectType AXIS = ObjectIdentifier_ObjectType_AXIS;
  static const ObjectType DISTANCE_TUBE = ObjectIdentifier_ObjectType_DISTANCE_TUBE;
  static const ObjectType MOTOR = ObjectIdentifier_ObjectType_MOTOR;
  static const ObjectType CONTAINER_B = ObjectIdentifier_ObjectType_CONTAINER_B;
  static const ObjectType CONTAINER_R = ObjectIdentifier_ObjectType_CONTAINER_R;
  static const ObjectType PICKUP_BLACK_WHITE = ObjectIdentifier_ObjectType_PICKUP_BLACK_WHITE;
  static const ObjectType PICKUP_CHOCO_MILK = ObjectIdentifier_ObjectType_PICKUP_CHOCO_MILK;
  static const ObjectType DUPLO_WHITE = ObjectIdentifier_ObjectType_DUPLO_WHITE;
  static const ObjectType DUPLO_CLASSIC = ObjectIdentifier_ObjectType_DUPLO_CLASSIC;
  static const ObjectType TWIX_SPEKULATIUS = ObjectIdentifier_ObjectType_TWIX_SPEKULATIUS;
  static const ObjectType TWIX_WHITE = ObjectIdentifier_ObjectType_TWIX_WHITE;
  static const ObjectType TWIX_CLASSIC = ObjectIdentifier_ObjectType_TWIX_CLASSIC;
  static const ObjectType TWIX_MINI = ObjectIdentifier_ObjectType_TWIX_MINI;
  static const ObjectType MARS = ObjectIdentifier_ObjectType_MARS;
  static const ObjectType MARS_MINI = ObjectIdentifier_ObjectType_MARS_MINI;
  static const ObjectType SNICKERS = ObjectIdentifier_ObjectType_SNICKERS;
  static const ObjectType SNICKERS_MINI = ObjectIdentifier_ObjectType_SNICKERS_MINI;
  static const ObjectType KITKAT_CLASSIC = ObjectIdentifier_ObjectType_KITKAT_CLASSIC;
  static const ObjectType KITKAT_WHITE = ObjectIdentifier_ObjectType_KITKAT_WHITE;
  static const ObjectType KITKAT_CHUNKY_WHITE = ObjectIdentifier_ObjectType_KITKAT_CHUNKY_WHITE;
  static const ObjectType KITKAT_CHUNKY_CLASSIC = ObjectIdentifier_ObjectType_KITKAT_CHUNKY_CLASSIC;
  static const ObjectType KITKAT_MINI = ObjectIdentifier_ObjectType_KITKAT_MINI;
  static const ObjectType LION_CLASSIC = ObjectIdentifier_ObjectType_LION_CLASSIC;
  static const ObjectType LION_MINI = ObjectIdentifier_ObjectType_LION_MINI;
  static const ObjectType M_M_CRIPSY = ObjectIdentifier_ObjectType_M_M_CRIPSY;
  static const ObjectType M_M_PEANUT = ObjectIdentifier_ObjectType_M_M_PEANUT;
  static const ObjectType BOUNTY = ObjectIdentifier_ObjectType_BOUNTY;
  static const ObjectType BOUNTY_MINI = ObjectIdentifier_ObjectType_BOUNTY_MINI;
  static const ObjectType MILKYWAY = ObjectIdentifier_ObjectType_MILKYWAY;
  static const ObjectType MILKYWAY_MINI = ObjectIdentifier_ObjectType_MILKYWAY_MINI;
  static const ObjectType RITTERSPORT_NUGAT = ObjectIdentifier_ObjectType_RITTERSPORT_NUGAT;
  static const ObjectType RITTERSPORT_KNUSPERKEKS = ObjectIdentifier_ObjectType_RITTERSPORT_KNUSPERKEKS;
  static const ObjectType RITTERSPORT_JOGHURT = ObjectIdentifier_ObjectType_RITTERSPORT_JOGHURT;
  static const ObjectType RITTERSPORT_KNUSPERFLAKES = ObjectIdentifier_ObjectType_RITTERSPORT_KNUSPERFLAKES;
  static const ObjectType RITTERSPORT_NUSS_SPLITTER = ObjectIdentifier_ObjectType_RITTERSPORT_NUSS_SPLITTER;
  static const ObjectType RITTERSPORT_MARZIPAN = ObjectIdentifier_ObjectType_RITTERSPORT_MARZIPAN;
  static inline bool ObjectType_IsValid(int value) {
    return ObjectIdentifier_ObjectType_IsValid(value);
  }
  static const ObjectType ObjectType_MIN =
    ObjectIdentifier_ObjectType_ObjectType_MIN;
  static const ObjectType ObjectType_MAX =
    ObjectIdentifier_ObjectType_ObjectType_MAX;
  static const int ObjectType_ARRAYSIZE =
    ObjectIdentifier_ObjectType_ObjectType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObjectType_descriptor() {
    return ObjectIdentifier_ObjectType_descriptor();
  }
  static inline const ::std::string& ObjectType_Name(ObjectType value) {
    return ObjectIdentifier_ObjectType_Name(value);
  }
  static inline bool ObjectType_Parse(const ::std::string& name,
      ObjectType* value) {
    return ObjectIdentifier_ObjectType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .mission_protobuf.ObjectIdentifier.ObjectType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::mission_protobuf::ObjectIdentifier_ObjectType type() const;
  inline void set_type(::mission_protobuf::ObjectIdentifier_ObjectType value);

  // optional int64 type_id = 2;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  inline ::google::protobuf::int64 type_id() const;
  inline void set_type_id(::google::protobuf::int64 value);

  // optional int64 instance_id = 3;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 3;
  inline ::google::protobuf::int64 instance_id() const;
  inline void set_instance_id(::google::protobuf::int64 value);

  // optional string description = 4;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 4;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string image_description = 5;
  inline bool has_image_description() const;
  inline void clear_image_description();
  static const int kImageDescriptionFieldNumber = 5;
  inline const ::std::string& image_description() const;
  inline void set_image_description(const ::std::string& value);
  inline void set_image_description(const char* value);
  inline void set_image_description(const char* value, size_t size);
  inline ::std::string* mutable_image_description();
  inline ::std::string* release_image_description();
  inline void set_allocated_image_description(::std::string* image_description);

  // @@protoc_insertion_point(class_scope:mission_protobuf.ObjectIdentifier)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_image_description();
  inline void clear_has_image_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 type_id_;
  ::google::protobuf::int64 instance_id_;
  ::std::string* description_;
  ::std::string* image_description_;
  int type_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static ObjectIdentifier* default_instance_;
};
// -------------------------------------------------------------------

class ObjectConfiguration : public ::google::protobuf::Message {
 public:
  ObjectConfiguration();
  virtual ~ObjectConfiguration();

  ObjectConfiguration(const ObjectConfiguration& from);

  inline ObjectConfiguration& operator=(const ObjectConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectConfiguration& default_instance();

  void Swap(ObjectConfiguration* other);

  // implements Message ----------------------------------------------

  ObjectConfiguration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectConfiguration& from);
  void MergeFrom(const ObjectConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .mission_protobuf.ObjectIdentifier object = 2;
  inline int object_size() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 2;
  inline const ::mission_protobuf::ObjectIdentifier& object(int index) const;
  inline ::mission_protobuf::ObjectIdentifier* mutable_object(int index);
  inline ::mission_protobuf::ObjectIdentifier* add_object();
  inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::ObjectIdentifier >&
      object() const;
  inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::ObjectIdentifier >*
      mutable_object();

  // @@protoc_insertion_point(class_scope:mission_protobuf.ObjectConfiguration)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mission_protobuf::ObjectIdentifier > object_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static ObjectConfiguration* default_instance_;
};
// -------------------------------------------------------------------

class LocationIdentifier : public ::google::protobuf::Message {
 public:
  LocationIdentifier();
  virtual ~LocationIdentifier();

  LocationIdentifier(const LocationIdentifier& from);

  inline LocationIdentifier& operator=(const LocationIdentifier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationIdentifier& default_instance();

  void Swap(LocationIdentifier* other);

  // implements Message ----------------------------------------------

  LocationIdentifier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocationIdentifier& from);
  void MergeFrom(const LocationIdentifier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LocationIdentifier_LocationType LocationType;
  static const LocationType NONE = LocationIdentifier_LocationType_NONE;
  static const LocationType EN = LocationIdentifier_LocationType_EN;
  static const LocationType SH = LocationIdentifier_LocationType_SH;
  static const LocationType WS = LocationIdentifier_LocationType_WS;
  static const LocationType CB = LocationIdentifier_LocationType_CB;
  static const LocationType WP = LocationIdentifier_LocationType_WP;
  static const LocationType PP = LocationIdentifier_LocationType_PP;
  static const LocationType ROBOT = LocationIdentifier_LocationType_ROBOT;
  static const LocationType EX = LocationIdentifier_LocationType_EX;
  static inline bool LocationType_IsValid(int value) {
    return LocationIdentifier_LocationType_IsValid(value);
  }
  static const LocationType LocationType_MIN =
    LocationIdentifier_LocationType_LocationType_MIN;
  static const LocationType LocationType_MAX =
    LocationIdentifier_LocationType_LocationType_MAX;
  static const int LocationType_ARRAYSIZE =
    LocationIdentifier_LocationType_LocationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LocationType_descriptor() {
    return LocationIdentifier_LocationType_descriptor();
  }
  static inline const ::std::string& LocationType_Name(LocationType value) {
    return LocationIdentifier_LocationType_Name(value);
  }
  static inline bool LocationType_Parse(const ::std::string& name,
      LocationType* value) {
    return LocationIdentifier_LocationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .mission_protobuf.LocationIdentifier.LocationType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::mission_protobuf::LocationIdentifier_LocationType type() const;
  inline void set_type(::mission_protobuf::LocationIdentifier_LocationType value);

  // required int32 instance_id = 2;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int32 instance_id() const;
  inline void set_instance_id(::google::protobuf::int32 value);

  // optional string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:mission_protobuf.LocationIdentifier)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 instance_id_;
  ::std::string* description_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static LocationIdentifier* default_instance_;
};
// -------------------------------------------------------------------

class Inventory_Item : public ::google::protobuf::Message {
 public:
  Inventory_Item();
  virtual ~Inventory_Item();

  Inventory_Item(const Inventory_Item& from);

  inline Inventory_Item& operator=(const Inventory_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventory_Item& default_instance();

  void Swap(Inventory_Item* other);

  // implements Message ----------------------------------------------

  Inventory_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventory_Item& from);
  void MergeFrom(const Inventory_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Inventory_Item_CompType CompType;
  static const CompType COMP_ID = Inventory_Item_CompType_COMP_ID;
  static const CompType MSG_TYPE = Inventory_Item_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return Inventory_Item_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    Inventory_Item_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    Inventory_Item_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    Inventory_Item_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return Inventory_Item_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return Inventory_Item_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return Inventory_Item_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .mission_protobuf.ObjectIdentifier object = 1;
  inline bool has_object() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 1;
  inline const ::mission_protobuf::ObjectIdentifier& object() const;
  inline ::mission_protobuf::ObjectIdentifier* mutable_object();
  inline ::mission_protobuf::ObjectIdentifier* release_object();
  inline void set_allocated_object(::mission_protobuf::ObjectIdentifier* object);

  // optional uint64 quantity = 2;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  inline ::google::protobuf::uint64 quantity() const;
  inline void set_quantity(::google::protobuf::uint64 value);

  // optional .mission_protobuf.ObjectIdentifier container = 3;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 3;
  inline const ::mission_protobuf::ObjectIdentifier& container() const;
  inline ::mission_protobuf::ObjectIdentifier* mutable_container();
  inline ::mission_protobuf::ObjectIdentifier* release_container();
  inline void set_allocated_container(::mission_protobuf::ObjectIdentifier* container);

  // optional .mission_protobuf.LocationIdentifier location = 4;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 4;
  inline const ::mission_protobuf::LocationIdentifier& location() const;
  inline ::mission_protobuf::LocationIdentifier* mutable_location();
  inline ::mission_protobuf::LocationIdentifier* release_location();
  inline void set_allocated_location(::mission_protobuf::LocationIdentifier* location);

  // @@protoc_insertion_point(class_scope:mission_protobuf.Inventory.Item)
 private:
  inline void set_has_object();
  inline void clear_has_object();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_location();
  inline void clear_has_location();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::mission_protobuf::ObjectIdentifier* object_;
  ::google::protobuf::uint64 quantity_;
  ::mission_protobuf::ObjectIdentifier* container_;
  ::mission_protobuf::LocationIdentifier* location_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static Inventory_Item* default_instance_;
};
// -------------------------------------------------------------------

class Inventory : public ::google::protobuf::Message {
 public:
  Inventory();
  virtual ~Inventory();

  Inventory(const Inventory& from);

  inline Inventory& operator=(const Inventory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventory& default_instance();

  void Swap(Inventory* other);

  // implements Message ----------------------------------------------

  Inventory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventory& from);
  void MergeFrom(const Inventory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Inventory_Item Item;

  typedef Inventory_CompType CompType;
  static const CompType COMP_ID = Inventory_CompType_COMP_ID;
  static const CompType MSG_TYPE = Inventory_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return Inventory_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    Inventory_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    Inventory_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    Inventory_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return Inventory_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return Inventory_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return Inventory_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .mission_protobuf.Inventory.Item items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::mission_protobuf::Inventory_Item& items(int index) const;
  inline ::mission_protobuf::Inventory_Item* mutable_items(int index);
  inline ::mission_protobuf::Inventory_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Inventory_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Inventory_Item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:mission_protobuf.Inventory)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Inventory_Item > items_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static Inventory* default_instance_;
};
// -------------------------------------------------------------------

class Transaction : public ::google::protobuf::Message {
 public:
  Transaction();
  virtual ~Transaction();

  Transaction(const Transaction& from);

  inline Transaction& operator=(const Transaction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Transaction& default_instance();

  void Swap(Transaction* other);

  // implements Message ----------------------------------------------

  Transaction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Transaction& from);
  void MergeFrom(const Transaction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Transaction_Action Action;
  static const Action INSERT = Transaction_Action_INSERT;
  static const Action REMOVE = Transaction_Action_REMOVE;
  static const Action MOVE = Transaction_Action_MOVE;
  static inline bool Action_IsValid(int value) {
    return Transaction_Action_IsValid(value);
  }
  static const Action Action_MIN =
    Transaction_Action_Action_MIN;
  static const Action Action_MAX =
    Transaction_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    Transaction_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return Transaction_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return Transaction_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return Transaction_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 transaction_id = 1;
  inline bool has_transaction_id() const;
  inline void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 transaction_id() const;
  inline void set_transaction_id(::google::protobuf::uint64 value);

  // required uint64 order_id = 2;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // required .mission_protobuf.ObjectIdentifier object = 3;
  inline bool has_object() const;
  inline void clear_object();
  static const int kObjectFieldNumber = 3;
  inline const ::mission_protobuf::ObjectIdentifier& object() const;
  inline ::mission_protobuf::ObjectIdentifier* mutable_object();
  inline ::mission_protobuf::ObjectIdentifier* release_object();
  inline void set_allocated_object(::mission_protobuf::ObjectIdentifier* object);

  // optional uint32 quantity = 4;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);

  // required .mission_protobuf.Transaction.Action action = 5;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 5;
  inline ::mission_protobuf::Transaction_Action action() const;
  inline void set_action(::mission_protobuf::Transaction_Action value);

  // optional .mission_protobuf.LocationIdentifier source = 6;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline const ::mission_protobuf::LocationIdentifier& source() const;
  inline ::mission_protobuf::LocationIdentifier* mutable_source();
  inline ::mission_protobuf::LocationIdentifier* release_source();
  inline void set_allocated_source(::mission_protobuf::LocationIdentifier* source);

  // optional .mission_protobuf.LocationIdentifier destination = 7;
  inline bool has_destination() const;
  inline void clear_destination();
  static const int kDestinationFieldNumber = 7;
  inline const ::mission_protobuf::LocationIdentifier& destination() const;
  inline ::mission_protobuf::LocationIdentifier* mutable_destination();
  inline ::mission_protobuf::LocationIdentifier* release_destination();
  inline void set_allocated_destination(::mission_protobuf::LocationIdentifier* destination);

  // @@protoc_insertion_point(class_scope:mission_protobuf.Transaction)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_object();
  inline void clear_has_object();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_destination();
  inline void clear_has_destination();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 transaction_id_;
  ::google::protobuf::uint64 order_id_;
  ::mission_protobuf::ObjectIdentifier* object_;
  ::google::protobuf::uint32 quantity_;
  int action_;
  ::mission_protobuf::LocationIdentifier* source_;
  ::mission_protobuf::LocationIdentifier* destination_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static Transaction* default_instance_;
};
// -------------------------------------------------------------------

class TransactionLog : public ::google::protobuf::Message {
 public:
  TransactionLog();
  virtual ~TransactionLog();

  TransactionLog(const TransactionLog& from);

  inline TransactionLog& operator=(const TransactionLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionLog& default_instance();

  void Swap(TransactionLog* other);

  // implements Message ----------------------------------------------

  TransactionLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionLog& from);
  void MergeFrom(const TransactionLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TransactionLog_CompType CompType;
  static const CompType COMP_ID = TransactionLog_CompType_COMP_ID;
  static const CompType MSG_TYPE = TransactionLog_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return TransactionLog_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    TransactionLog_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    TransactionLog_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    TransactionLog_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return TransactionLog_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return TransactionLog_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return TransactionLog_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .mission_protobuf.Transaction transactions = 1;
  inline int transactions_size() const;
  inline void clear_transactions();
  static const int kTransactionsFieldNumber = 1;
  inline const ::mission_protobuf::Transaction& transactions(int index) const;
  inline ::mission_protobuf::Transaction* mutable_transactions(int index);
  inline ::mission_protobuf::Transaction* add_transactions();
  inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Transaction >&
      transactions() const;
  inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Transaction >*
      mutable_transactions();

  // @@protoc_insertion_point(class_scope:mission_protobuf.TransactionLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Transaction > transactions_;
  friend void  protobuf_AddDesc_task_5faction_2eproto();
  friend void protobuf_AssignDesc_task_5faction_2eproto();
  friend void protobuf_ShutdownFile_task_5faction_2eproto();

  void InitAsDefaultInstance();
  static TransactionLog* default_instance_;
};
// ===================================================================


// ===================================================================

// ObjectIdentifier

// required .mission_protobuf.ObjectIdentifier.ObjectType type = 1;
inline bool ObjectIdentifier::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectIdentifier::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectIdentifier::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectIdentifier::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::mission_protobuf::ObjectIdentifier_ObjectType ObjectIdentifier::type() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectIdentifier.type)
  return static_cast< ::mission_protobuf::ObjectIdentifier_ObjectType >(type_);
}
inline void ObjectIdentifier::set_type(::mission_protobuf::ObjectIdentifier_ObjectType value) {
  assert(::mission_protobuf::ObjectIdentifier_ObjectType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.ObjectIdentifier.type)
}

// optional int64 type_id = 2;
inline bool ObjectIdentifier::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectIdentifier::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectIdentifier::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectIdentifier::clear_type_id() {
  type_id_ = GOOGLE_LONGLONG(0);
  clear_has_type_id();
}
inline ::google::protobuf::int64 ObjectIdentifier::type_id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectIdentifier.type_id)
  return type_id_;
}
inline void ObjectIdentifier::set_type_id(::google::protobuf::int64 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.ObjectIdentifier.type_id)
}

// optional int64 instance_id = 3;
inline bool ObjectIdentifier::has_instance_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectIdentifier::set_has_instance_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectIdentifier::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectIdentifier::clear_instance_id() {
  instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_instance_id();
}
inline ::google::protobuf::int64 ObjectIdentifier::instance_id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectIdentifier.instance_id)
  return instance_id_;
}
inline void ObjectIdentifier::set_instance_id(::google::protobuf::int64 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.ObjectIdentifier.instance_id)
}

// optional string description = 4;
inline bool ObjectIdentifier::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectIdentifier::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectIdentifier::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectIdentifier::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& ObjectIdentifier::description() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectIdentifier.description)
  return *description_;
}
inline void ObjectIdentifier::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:mission_protobuf.ObjectIdentifier.description)
}
inline void ObjectIdentifier::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:mission_protobuf.ObjectIdentifier.description)
}
inline void ObjectIdentifier::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mission_protobuf.ObjectIdentifier.description)
}
inline ::std::string* ObjectIdentifier::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:mission_protobuf.ObjectIdentifier.description)
  return description_;
}
inline ::std::string* ObjectIdentifier::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ObjectIdentifier::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.ObjectIdentifier.description)
}

// optional string image_description = 5;
inline bool ObjectIdentifier::has_image_description() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ObjectIdentifier::set_has_image_description() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ObjectIdentifier::clear_has_image_description() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ObjectIdentifier::clear_image_description() {
  if (image_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_description_->clear();
  }
  clear_has_image_description();
}
inline const ::std::string& ObjectIdentifier::image_description() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectIdentifier.image_description)
  return *image_description_;
}
inline void ObjectIdentifier::set_image_description(const ::std::string& value) {
  set_has_image_description();
  if (image_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_description_ = new ::std::string;
  }
  image_description_->assign(value);
  // @@protoc_insertion_point(field_set:mission_protobuf.ObjectIdentifier.image_description)
}
inline void ObjectIdentifier::set_image_description(const char* value) {
  set_has_image_description();
  if (image_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_description_ = new ::std::string;
  }
  image_description_->assign(value);
  // @@protoc_insertion_point(field_set_char:mission_protobuf.ObjectIdentifier.image_description)
}
inline void ObjectIdentifier::set_image_description(const char* value, size_t size) {
  set_has_image_description();
  if (image_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_description_ = new ::std::string;
  }
  image_description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mission_protobuf.ObjectIdentifier.image_description)
}
inline ::std::string* ObjectIdentifier::mutable_image_description() {
  set_has_image_description();
  if (image_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:mission_protobuf.ObjectIdentifier.image_description)
  return image_description_;
}
inline ::std::string* ObjectIdentifier::release_image_description() {
  clear_has_image_description();
  if (image_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_description_;
    image_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ObjectIdentifier::set_allocated_image_description(::std::string* image_description) {
  if (image_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_description_;
  }
  if (image_description) {
    set_has_image_description();
    image_description_ = image_description;
  } else {
    clear_has_image_description();
    image_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.ObjectIdentifier.image_description)
}

// -------------------------------------------------------------------

// ObjectConfiguration

// required int32 id = 1;
inline bool ObjectConfiguration::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectConfiguration::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectConfiguration::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectConfiguration::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ObjectConfiguration::id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectConfiguration.id)
  return id_;
}
inline void ObjectConfiguration::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.ObjectConfiguration.id)
}

// repeated .mission_protobuf.ObjectIdentifier object = 2;
inline int ObjectConfiguration::object_size() const {
  return object_.size();
}
inline void ObjectConfiguration::clear_object() {
  object_.Clear();
}
inline const ::mission_protobuf::ObjectIdentifier& ObjectConfiguration::object(int index) const {
  // @@protoc_insertion_point(field_get:mission_protobuf.ObjectConfiguration.object)
  return object_.Get(index);
}
inline ::mission_protobuf::ObjectIdentifier* ObjectConfiguration::mutable_object(int index) {
  // @@protoc_insertion_point(field_mutable:mission_protobuf.ObjectConfiguration.object)
  return object_.Mutable(index);
}
inline ::mission_protobuf::ObjectIdentifier* ObjectConfiguration::add_object() {
  // @@protoc_insertion_point(field_add:mission_protobuf.ObjectConfiguration.object)
  return object_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::ObjectIdentifier >&
ObjectConfiguration::object() const {
  // @@protoc_insertion_point(field_list:mission_protobuf.ObjectConfiguration.object)
  return object_;
}
inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::ObjectIdentifier >*
ObjectConfiguration::mutable_object() {
  // @@protoc_insertion_point(field_mutable_list:mission_protobuf.ObjectConfiguration.object)
  return &object_;
}

// -------------------------------------------------------------------

// LocationIdentifier

// required .mission_protobuf.LocationIdentifier.LocationType type = 1;
inline bool LocationIdentifier::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocationIdentifier::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocationIdentifier::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocationIdentifier::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::mission_protobuf::LocationIdentifier_LocationType LocationIdentifier::type() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.LocationIdentifier.type)
  return static_cast< ::mission_protobuf::LocationIdentifier_LocationType >(type_);
}
inline void LocationIdentifier::set_type(::mission_protobuf::LocationIdentifier_LocationType value) {
  assert(::mission_protobuf::LocationIdentifier_LocationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.LocationIdentifier.type)
}

// required int32 instance_id = 2;
inline bool LocationIdentifier::has_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocationIdentifier::set_has_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocationIdentifier::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LocationIdentifier::clear_instance_id() {
  instance_id_ = 0;
  clear_has_instance_id();
}
inline ::google::protobuf::int32 LocationIdentifier::instance_id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.LocationIdentifier.instance_id)
  return instance_id_;
}
inline void LocationIdentifier::set_instance_id(::google::protobuf::int32 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.LocationIdentifier.instance_id)
}

// optional string description = 3;
inline bool LocationIdentifier::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LocationIdentifier::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LocationIdentifier::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LocationIdentifier::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& LocationIdentifier::description() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.LocationIdentifier.description)
  return *description_;
}
inline void LocationIdentifier::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:mission_protobuf.LocationIdentifier.description)
}
inline void LocationIdentifier::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:mission_protobuf.LocationIdentifier.description)
}
inline void LocationIdentifier::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mission_protobuf.LocationIdentifier.description)
}
inline ::std::string* LocationIdentifier::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:mission_protobuf.LocationIdentifier.description)
  return description_;
}
inline ::std::string* LocationIdentifier::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LocationIdentifier::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.LocationIdentifier.description)
}

// -------------------------------------------------------------------

// Inventory_Item

// required .mission_protobuf.ObjectIdentifier object = 1;
inline bool Inventory_Item::has_object() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Inventory_Item::set_has_object() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Inventory_Item::clear_has_object() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Inventory_Item::clear_object() {
  if (object_ != NULL) object_->::mission_protobuf::ObjectIdentifier::Clear();
  clear_has_object();
}
inline const ::mission_protobuf::ObjectIdentifier& Inventory_Item::object() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Inventory.Item.object)
  return object_ != NULL ? *object_ : *default_instance_->object_;
}
inline ::mission_protobuf::ObjectIdentifier* Inventory_Item::mutable_object() {
  set_has_object();
  if (object_ == NULL) object_ = new ::mission_protobuf::ObjectIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Inventory.Item.object)
  return object_;
}
inline ::mission_protobuf::ObjectIdentifier* Inventory_Item::release_object() {
  clear_has_object();
  ::mission_protobuf::ObjectIdentifier* temp = object_;
  object_ = NULL;
  return temp;
}
inline void Inventory_Item::set_allocated_object(::mission_protobuf::ObjectIdentifier* object) {
  delete object_;
  object_ = object;
  if (object) {
    set_has_object();
  } else {
    clear_has_object();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Inventory.Item.object)
}

// optional uint64 quantity = 2;
inline bool Inventory_Item::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Inventory_Item::set_has_quantity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Inventory_Item::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Inventory_Item::clear_quantity() {
  quantity_ = GOOGLE_ULONGLONG(0);
  clear_has_quantity();
}
inline ::google::protobuf::uint64 Inventory_Item::quantity() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Inventory.Item.quantity)
  return quantity_;
}
inline void Inventory_Item::set_quantity(::google::protobuf::uint64 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Inventory.Item.quantity)
}

// optional .mission_protobuf.ObjectIdentifier container = 3;
inline bool Inventory_Item::has_container() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Inventory_Item::set_has_container() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Inventory_Item::clear_has_container() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Inventory_Item::clear_container() {
  if (container_ != NULL) container_->::mission_protobuf::ObjectIdentifier::Clear();
  clear_has_container();
}
inline const ::mission_protobuf::ObjectIdentifier& Inventory_Item::container() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Inventory.Item.container)
  return container_ != NULL ? *container_ : *default_instance_->container_;
}
inline ::mission_protobuf::ObjectIdentifier* Inventory_Item::mutable_container() {
  set_has_container();
  if (container_ == NULL) container_ = new ::mission_protobuf::ObjectIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Inventory.Item.container)
  return container_;
}
inline ::mission_protobuf::ObjectIdentifier* Inventory_Item::release_container() {
  clear_has_container();
  ::mission_protobuf::ObjectIdentifier* temp = container_;
  container_ = NULL;
  return temp;
}
inline void Inventory_Item::set_allocated_container(::mission_protobuf::ObjectIdentifier* container) {
  delete container_;
  container_ = container;
  if (container) {
    set_has_container();
  } else {
    clear_has_container();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Inventory.Item.container)
}

// optional .mission_protobuf.LocationIdentifier location = 4;
inline bool Inventory_Item::has_location() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Inventory_Item::set_has_location() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Inventory_Item::clear_has_location() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Inventory_Item::clear_location() {
  if (location_ != NULL) location_->::mission_protobuf::LocationIdentifier::Clear();
  clear_has_location();
}
inline const ::mission_protobuf::LocationIdentifier& Inventory_Item::location() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Inventory.Item.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::mission_protobuf::LocationIdentifier* Inventory_Item::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::mission_protobuf::LocationIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Inventory.Item.location)
  return location_;
}
inline ::mission_protobuf::LocationIdentifier* Inventory_Item::release_location() {
  clear_has_location();
  ::mission_protobuf::LocationIdentifier* temp = location_;
  location_ = NULL;
  return temp;
}
inline void Inventory_Item::set_allocated_location(::mission_protobuf::LocationIdentifier* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Inventory.Item.location)
}

// -------------------------------------------------------------------

// Inventory

// repeated .mission_protobuf.Inventory.Item items = 1;
inline int Inventory::items_size() const {
  return items_.size();
}
inline void Inventory::clear_items() {
  items_.Clear();
}
inline const ::mission_protobuf::Inventory_Item& Inventory::items(int index) const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Inventory.items)
  return items_.Get(index);
}
inline ::mission_protobuf::Inventory_Item* Inventory::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Inventory.items)
  return items_.Mutable(index);
}
inline ::mission_protobuf::Inventory_Item* Inventory::add_items() {
  // @@protoc_insertion_point(field_add:mission_protobuf.Inventory.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Inventory_Item >&
Inventory::items() const {
  // @@protoc_insertion_point(field_list:mission_protobuf.Inventory.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Inventory_Item >*
Inventory::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:mission_protobuf.Inventory.items)
  return &items_;
}

// -------------------------------------------------------------------

// Transaction

// required uint64 transaction_id = 1;
inline bool Transaction::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Transaction::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Transaction::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Transaction::clear_transaction_id() {
  transaction_id_ = GOOGLE_ULONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::uint64 Transaction::transaction_id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.transaction_id)
  return transaction_id_;
}
inline void Transaction::set_transaction_id(::google::protobuf::uint64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Transaction.transaction_id)
}

// required uint64 order_id = 2;
inline bool Transaction::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Transaction::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Transaction::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Transaction::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 Transaction::order_id() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.order_id)
  return order_id_;
}
inline void Transaction::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Transaction.order_id)
}

// required .mission_protobuf.ObjectIdentifier object = 3;
inline bool Transaction::has_object() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Transaction::set_has_object() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Transaction::clear_has_object() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Transaction::clear_object() {
  if (object_ != NULL) object_->::mission_protobuf::ObjectIdentifier::Clear();
  clear_has_object();
}
inline const ::mission_protobuf::ObjectIdentifier& Transaction::object() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.object)
  return object_ != NULL ? *object_ : *default_instance_->object_;
}
inline ::mission_protobuf::ObjectIdentifier* Transaction::mutable_object() {
  set_has_object();
  if (object_ == NULL) object_ = new ::mission_protobuf::ObjectIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Transaction.object)
  return object_;
}
inline ::mission_protobuf::ObjectIdentifier* Transaction::release_object() {
  clear_has_object();
  ::mission_protobuf::ObjectIdentifier* temp = object_;
  object_ = NULL;
  return temp;
}
inline void Transaction::set_allocated_object(::mission_protobuf::ObjectIdentifier* object) {
  delete object_;
  object_ = object;
  if (object) {
    set_has_object();
  } else {
    clear_has_object();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Transaction.object)
}

// optional uint32 quantity = 4;
inline bool Transaction::has_quantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Transaction::set_has_quantity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Transaction::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Transaction::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 Transaction::quantity() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.quantity)
  return quantity_;
}
inline void Transaction::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Transaction.quantity)
}

// required .mission_protobuf.Transaction.Action action = 5;
inline bool Transaction::has_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Transaction::set_has_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Transaction::clear_has_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Transaction::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::mission_protobuf::Transaction_Action Transaction::action() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.action)
  return static_cast< ::mission_protobuf::Transaction_Action >(action_);
}
inline void Transaction::set_action(::mission_protobuf::Transaction_Action value) {
  assert(::mission_protobuf::Transaction_Action_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:mission_protobuf.Transaction.action)
}

// optional .mission_protobuf.LocationIdentifier source = 6;
inline bool Transaction::has_source() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Transaction::set_has_source() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Transaction::clear_has_source() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Transaction::clear_source() {
  if (source_ != NULL) source_->::mission_protobuf::LocationIdentifier::Clear();
  clear_has_source();
}
inline const ::mission_protobuf::LocationIdentifier& Transaction::source() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.source)
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
inline ::mission_protobuf::LocationIdentifier* Transaction::mutable_source() {
  set_has_source();
  if (source_ == NULL) source_ = new ::mission_protobuf::LocationIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Transaction.source)
  return source_;
}
inline ::mission_protobuf::LocationIdentifier* Transaction::release_source() {
  clear_has_source();
  ::mission_protobuf::LocationIdentifier* temp = source_;
  source_ = NULL;
  return temp;
}
inline void Transaction::set_allocated_source(::mission_protobuf::LocationIdentifier* source) {
  delete source_;
  source_ = source;
  if (source) {
    set_has_source();
  } else {
    clear_has_source();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Transaction.source)
}

// optional .mission_protobuf.LocationIdentifier destination = 7;
inline bool Transaction::has_destination() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Transaction::set_has_destination() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Transaction::clear_has_destination() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Transaction::clear_destination() {
  if (destination_ != NULL) destination_->::mission_protobuf::LocationIdentifier::Clear();
  clear_has_destination();
}
inline const ::mission_protobuf::LocationIdentifier& Transaction::destination() const {
  // @@protoc_insertion_point(field_get:mission_protobuf.Transaction.destination)
  return destination_ != NULL ? *destination_ : *default_instance_->destination_;
}
inline ::mission_protobuf::LocationIdentifier* Transaction::mutable_destination() {
  set_has_destination();
  if (destination_ == NULL) destination_ = new ::mission_protobuf::LocationIdentifier;
  // @@protoc_insertion_point(field_mutable:mission_protobuf.Transaction.destination)
  return destination_;
}
inline ::mission_protobuf::LocationIdentifier* Transaction::release_destination() {
  clear_has_destination();
  ::mission_protobuf::LocationIdentifier* temp = destination_;
  destination_ = NULL;
  return temp;
}
inline void Transaction::set_allocated_destination(::mission_protobuf::LocationIdentifier* destination) {
  delete destination_;
  destination_ = destination;
  if (destination) {
    set_has_destination();
  } else {
    clear_has_destination();
  }
  // @@protoc_insertion_point(field_set_allocated:mission_protobuf.Transaction.destination)
}

// -------------------------------------------------------------------

// TransactionLog

// repeated .mission_protobuf.Transaction transactions = 1;
inline int TransactionLog::transactions_size() const {
  return transactions_.size();
}
inline void TransactionLog::clear_transactions() {
  transactions_.Clear();
}
inline const ::mission_protobuf::Transaction& TransactionLog::transactions(int index) const {
  // @@protoc_insertion_point(field_get:mission_protobuf.TransactionLog.transactions)
  return transactions_.Get(index);
}
inline ::mission_protobuf::Transaction* TransactionLog::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:mission_protobuf.TransactionLog.transactions)
  return transactions_.Mutable(index);
}
inline ::mission_protobuf::Transaction* TransactionLog::add_transactions() {
  // @@protoc_insertion_point(field_add:mission_protobuf.TransactionLog.transactions)
  return transactions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Transaction >&
TransactionLog::transactions() const {
  // @@protoc_insertion_point(field_list:mission_protobuf.TransactionLog.transactions)
  return transactions_;
}
inline ::google::protobuf::RepeatedPtrField< ::mission_protobuf::Transaction >*
TransactionLog::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:mission_protobuf.TransactionLog.transactions)
  return &transactions_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mission_protobuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mission_protobuf::ObjectIdentifier_ObjectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mission_protobuf::ObjectIdentifier_ObjectType>() {
  return ::mission_protobuf::ObjectIdentifier_ObjectType_descriptor();
}
template <> struct is_proto_enum< ::mission_protobuf::LocationIdentifier_LocationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mission_protobuf::LocationIdentifier_LocationType>() {
  return ::mission_protobuf::LocationIdentifier_LocationType_descriptor();
}
template <> struct is_proto_enum< ::mission_protobuf::Inventory_Item_CompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mission_protobuf::Inventory_Item_CompType>() {
  return ::mission_protobuf::Inventory_Item_CompType_descriptor();
}
template <> struct is_proto_enum< ::mission_protobuf::Inventory_CompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mission_protobuf::Inventory_CompType>() {
  return ::mission_protobuf::Inventory_CompType_descriptor();
}
template <> struct is_proto_enum< ::mission_protobuf::Transaction_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mission_protobuf::Transaction_Action>() {
  return ::mission_protobuf::Transaction_Action_descriptor();
}
template <> struct is_proto_enum< ::mission_protobuf::TransactionLog_CompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mission_protobuf::TransactionLog_CompType>() {
  return ::mission_protobuf::TransactionLog_CompType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_task_5faction_2eproto__INCLUDED
