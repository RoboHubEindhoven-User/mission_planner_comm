// /***************************************************************************
//  *  task_specification.proto - mission planner Protocol - task specification message
//  *
//  *  Copyright  2019 Robohub-Eindhoven
//  ****************************************************************************/

package mission_protobuf;

import "task_action.proto";
import "time.proto";

option java_package = "org.mission_planner.common_msgs";
option java_outer_classname = "TaskProtos";

// ***************************************************************************
message NavigationTask {
    // Orientations for Navigation Goal.
    enum Orientation {
        NORTH = 1;
        EAST  = 2;
        SOUTH = 3;
        WEST  = 4;
    }
    // The location where the robot should navigate to.
    required LocationIdentifier location = 1;

    // The orientation which the robot should face when at the goal.
    required Orientation orientation = 2;

    // The time which the robot should wait once arrived at the goal.
    required Time wait_time = 3;
}
// ***************************************************************************

message TransportationTask {
    // The requested product represented by their identifier
    required ObjectIdentifier object = 1;

    // There are two different interpretations of this field:
    // 1. When the destination field is set, the object(s) must be delivered to
    //     this destination INSIDE of the container.
    // 2. When the destination field is not set, the container represents the
    //     location into which the object(s) must be delivered.
    optional ObjectIdentifier container = 2;

    // The already delivered quantity of the object
    required uint64 quantity_delivered = 3;

    // The requested quantity of the object. This is only required for object
    // classes. When a concrete object instance is requested, this field is not
    // set.
    // If the objects are requested in a container (i.e. the container field is
    // set), this field specifies the amount of objects inside the container!
    optional uint64 quantity_requested = 4;

    // The location to where the product should be delivered. When the destination
    // is not specified, the container must be set. This container the identifies
    // the delivery location.
    optional LocationIdentifier destination = 5;

    // The location to where the product should be fetched
    optional LocationIdentifier source = 6;

    // The team which is currently processing this order
    optional string processing_team = 7;
}
// ***************************************************************************

message Task {
    enum Status {
        OFFERED     = 1;  // The task is offered by the mission station controller and can be processed by a team/robot
        TIMEOUT     = 2;  // The task has not been accepted in time or processing took too long
        IN_PROGRESS = 3;  // A team/robot is currently processing this task
        PAUSED      = 4;  // Temporarily pause processing this task
        ABORTED     = 5;  // Stop working on this task
        FINISHED    = 6;  // The task has been processed successfully
    }

    // Task Types which are supported
    enum TaskType {
        UNKNOWN         = 0;
        TRANSPORTATION  = 1;
        NAVIGATION      = 2;
    }

    required uint64 id                                = 1; // A unique identifier of this task
    required TaskType type                            = 2;
    required Status status                            = 3; // The status of this task as specified in the Status enumeration
    optional TransportationTask transportation_task   = 4;
    optional NavigationTask navigation_task           = 5; 
}
